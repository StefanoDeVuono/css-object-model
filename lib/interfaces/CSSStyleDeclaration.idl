interface CSSStyleDeclaration {
  [CEReactions] attribute CSSOMString cssText;
  readonly attribute unsigned long length;
  getter CSSOMString item(unsigned long index);
  CSSOMString getPropertyValue(CSSOMString property);
  CSSOMString getPropertyPriority(CSSOMString property);
  [CEReactions] void setProperty(CSSOMString property, [TreatNullAs=EmptyString] CSSOMString value, [TreatNullAs=EmptyString] optional CSSOMString priority = "");
  [CEReactions] void setPropertyValue(CSSOMString property, [TreatNullAs=EmptyString] CSSOMString value);
  [CEReactions] void setPropertyPriority(CSSOMString property, [TreatNullAs=EmptyString] CSSOMString priority);
  [CEReactions] CSSOMString removeProperty(CSSOMString property);
  readonly attribute CSSRule? parentRule;
  [CEReactions] attribute [TreatNullAs=EmptyString] CSSOMString cssFloat;
};

partial interface CSSStyleDeclaration {
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString alignContent;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString align-content;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString alignItems;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString align-items;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString alignSelf;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString align-self;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString all;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString animation;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString animationDelay;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString animation-delay;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString animationDirection;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString animation-direction;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString animationDuration;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString animation-duration;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString animationFillMode;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString animation-fill-mode;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString animationIterationCount;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString animation-iteration-count;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString animationName;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString animation-name;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString animationPlayState;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString animation-play-state;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString animationTimingFunction;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString animation-timing-function;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString backfaceVisibility;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString backface-visibility;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString background;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString backgroundAttachment;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString background-attachment;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString backgroundBlendMode;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString background-blend-mode;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString backgroundClip;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString background-clip;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString backgroundColor;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString background-color;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString backgroundImage;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString background-image;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString backgroundOrigin;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString background-origin;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString backgroundPosition;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString background-position;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString backgroundRepeat;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString background-repeat;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString backgroundSize;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString background-size;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString blockSize;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString block-size;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderBlockEnd;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-block-end;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderBlockEndColor;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-block-end-color;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderBlockEndStyle;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-block-end-style;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderBlockEndWidth;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-block-end-width;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderBlockStart;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-block-start;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderBlockStartColor;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-block-start-color;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderBlockStartStyle;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-block-start-style;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderBlockStartWidth;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-block-start-width;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderBottom;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-bottom;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderBottomColor;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-bottom-color;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderBottomLeftRadius;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-bottom-left-radius;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderBottomRightRadius;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-bottom-right-radius;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderBottomStyle;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-bottom-style;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderBottomWidth;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-bottom-width;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderCollapse;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-collapse;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderColor;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-color;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderImage;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-image;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderImageOutset;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-image-outset;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderImageRepeat;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-image-repeat;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderImageSlice;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-image-slice;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderImageSource;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-image-source;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderImageWidth;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-image-width;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderInlineEnd;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-inline-end;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderInlineEndColor;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-inline-end-color;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderInlineEndStyle;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-inline-end-style;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderInlineEndWidth;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-inline-end-width;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderInlineStart;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-inline-start;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderInlineStartColor;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-inline-start-color;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderInlineStartStyle;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-inline-start-style;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderInlineStartWidth;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-inline-start-width;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderLeft;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-left;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderLeftColor;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-left-color;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderLeftStyle;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-left-style;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderLeftWidth;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-left-width;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderRadius;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-radius;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderRight;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-right;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderRightColor;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-right-color;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderRightStyle;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-right-style;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderRightWidth;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-right-width;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderSpacing;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-spacing;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderStyle;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-style;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderTop;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-top;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderTopColor;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-top-color;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderTopLeftRadius;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-top-left-radius;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderTopRightRadius;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-top-right-radius;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderTopStyle;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-top-style;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderTopWidth;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-top-width;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString borderWidth;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString border-width;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString bottom;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString boxDecorationBreak;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString box-decoration-break;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString boxShadow;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString box-shadow;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString boxSizing;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString box-sizing;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString breakAfter;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString break-after;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString breakBefore;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString break-before;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString breakInside;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString break-inside;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString captionSide;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString caption-side;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString caretColor;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString caret-color;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString clear;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString clip;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString clipPath;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString clip-path;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString color;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString columnCount;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString column-count;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString columnFill;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString column-fill;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString columnGap;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString column-gap;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString columnRule;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString column-rule;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString columnRuleColor;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString column-rule-color;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString columnRuleStyle;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString column-rule-style;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString columnRuleWidth;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString column-rule-width;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString columnSpan;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString column-span;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString columnWidth;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString column-width;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString columns;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString content;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString counterIncrement;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString counter-increment;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString counterReset;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString counter-reset;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString cursor;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString direction;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString display;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString emptyCells;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString empty-cells;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString filter;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString flex;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString flexBasis;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString flex-basis;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString flexDirection;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString flex-direction;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString flexFlow;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString flex-flow;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString flexGrow;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString flex-grow;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString flexShrink;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString flex-shrink;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString flexWrap;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString flex-wrap;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString float;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString font;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString fontFamily;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString font-family;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString fontFeatureSettings;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString font-feature-settings;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString fontKerning;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString font-kerning;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString fontLanguageOverride;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString font-language-override;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString fontSize;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString font-size;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString fontSizeAdjust;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString font-size-adjust;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString fontStretch;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString font-stretch;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString fontStyle;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString font-style;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString fontSynthesis;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString font-synthesis;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString fontVariant;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString font-variant;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString fontVariantAlternates;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString font-variant-alternates;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString fontVariantCaps;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString font-variant-caps;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString fontVariantEastAsian;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString font-variant-east-asian;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString fontVariantLigatures;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString font-variant-ligatures;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString fontVariantNumeric;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString font-variant-numeric;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString fontVariantPosition;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString font-variant-position;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString fontWeight;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString font-weight;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString grid;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString gridArea;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString grid-area;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString gridAutoColumns;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString grid-auto-columns;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString gridAutoFlow;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString grid-auto-flow;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString gridAutoRows;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString grid-auto-rows;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString gridColumn;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString grid-column;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString gridColumnEnd;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString grid-column-end;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString gridColumnGap;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString grid-column-gap;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString gridColumnStart;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString grid-column-start;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString gridGap;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString grid-gap;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString gridRow;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString grid-row;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString gridRowEnd;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString grid-row-end;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString gridRowGap;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString grid-row-gap;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString gridRowStart;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString grid-row-start;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString gridTemplate;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString grid-template;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString gridTemplateAreas;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString grid-template-areas;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString gridTemplateColumns;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString grid-template-columns;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString gridTemplateRows;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString grid-template-rows;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString height;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString hyphens;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString imageOrientation;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString image-orientation;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString imageRendering;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString image-rendering;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString imageResolution;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString image-resolution;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString imeMode;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString ime-mode;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString inlineSize;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString inline-size;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString isolation;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString justifyContent;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString justify-content;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString left;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString letterSpacing;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString letter-spacing;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString lineBreak;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString line-break;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString lineHeight;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString line-height;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString listStyle;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString list-style;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString listStyleImage;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString list-style-image;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString listStylePosition;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString list-style-position;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString listStyleType;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString list-style-type;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString margin;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString marginBlockEnd;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString margin-block-end;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString marginBlockStart;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString margin-block-start;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString marginBottom;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString margin-bottom;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString marginInlineEnd;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString margin-inline-end;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString marginInlineStart;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString margin-inline-start;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString marginLeft;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString margin-left;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString marginRight;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString margin-right;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString marginTop;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString margin-top;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString mask;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString maskClip;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString mask-clip;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString maskComposite;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString mask-composite;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString maskImage;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString mask-image;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString maskMode;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString mask-mode;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString maskOrigin;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString mask-origin;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString maskPosition;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString mask-position;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString maskRepeat;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString mask-repeat;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString maskSize;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString mask-size;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString maskType;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString mask-type;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString maxHeight;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString max-height;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString maxWidth;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString max-width;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString minBlockSize;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString min-block-size;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString minHeight;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString min-height;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString minInlineSize;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString min-inline-size;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString minWidth;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString min-width;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString mixBlendMode;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString mix-blend-mode;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString objectFit;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString object-fit;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString objectPosition;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString object-position;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString offsetBlockEnd;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString offset-block-end;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString offsetBlockStart;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString offset-block-start;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString offsetInlineEnd;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString offset-inline-end;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString offsetInlineStart;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString offset-inline-start;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString opacity;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString order;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString orphans;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString outline;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString outlineColor;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString outline-color;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString outlineOffset;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString outline-offset;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString outlineStyle;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString outline-style;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString outlineWidth;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString outline-width;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString overflow;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString overflowWrap;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString overflow-wrap;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString overflowX;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString overflow-x;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString overflowY;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString overflow-y;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString padding;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString paddingBlockEnd;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString padding-block-end;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString paddingBlockStart;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString padding-block-start;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString paddingBottom;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString padding-bottom;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString paddingInlineEnd;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString padding-inline-end;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString paddingInlineStart;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString padding-inline-start;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString paddingLeft;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString padding-left;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString paddingRight;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString padding-right;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString paddingTop;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString padding-top;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString pageBreakAfter;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString page-break-after;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString pageBreakBefore;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString page-break-before;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString pageBreakInside;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString page-break-inside;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString perspective;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString perspectiveOrigin;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString perspective-origin;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString pointerEvents;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString pointer-events;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString position;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString quotes;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString resize;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString right;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString rubyAlign;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString ruby-align;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString rubyMerge;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString ruby-merge;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString rubyPosition;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString ruby-position;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString scrollBehavior;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString scroll-behavior;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString scrollSnapCoordinate;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString scroll-snap-coordinate;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString scrollSnapDestination;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString scroll-snap-destination;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString scrollSnapType;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString scroll-snap-type;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString shapeImageThreshold;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString shape-image-threshold;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString shapeMargin;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString shape-margin;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString shapeOutside;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString shape-outside;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString tabSize;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString tab-size;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString tableLayout;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString table-layout;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString textAlign;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString text-align;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString textAlignLast;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString text-align-last;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString textCombineUpright;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString text-combine-upright;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString textDecoration;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString text-decoration;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString textDecorationColor;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString text-decoration-color;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString textDecorationLine;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString text-decoration-line;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString textDecorationStyle;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString text-decoration-style;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString textEmphasis;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString text-emphasis;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString textEmphasisColor;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString text-emphasis-color;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString textEmphasisPosition;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString text-emphasis-position;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString textEmphasisStyle;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString text-emphasis-style;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString textIndent;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString text-indent;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString textJustify;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString text-justify;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString textOrientation;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString text-orientation;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString textOverflow;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString text-overflow;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString textRendering;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString text-rendering;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString textShadow;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString text-shadow;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString textTransform;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString text-transform;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString textUnderlinePosition;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString text-underline-position;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString top;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString touchAction;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString touch-action;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString transform;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString transformBox;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString transform-box;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString transformOrigin;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString transform-origin;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString transformStyle;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString transform-style;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString transition;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString transitionDelay;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString transition-delay;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString transitionDuration;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString transition-duration;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString transitionProperty;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString transition-property;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString transitionTimingFunction;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString transition-timing-function;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString unicodeBidi;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString unicode-bidi;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString verticalAlign;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString vertical-align;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString visibility;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString whiteSpace;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString white-space;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString widows;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString width;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString willChange;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString will-change;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString wordBreak;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString word-break;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString wordSpacing;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString word-spacing;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString wordWrap;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString word-wrap;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString writingMode;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString writing-mode;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString zIndex;
    [CEReactions, TreatNullAs=EmptyString] attribute CSSOMString z-index;
};
